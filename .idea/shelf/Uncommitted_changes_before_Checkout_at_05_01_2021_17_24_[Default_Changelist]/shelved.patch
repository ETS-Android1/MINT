Index: app/src/main/java/com/example/helloworld/AsyncItineraryCompute.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.helloworld;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.content.Intent;\r\nimport android.os.AsyncTask;\r\nimport android.os.Handler;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.io.BufferedInputStream;\r\nimport java.io.BufferedReader;\r\nimport java.io.IOException;\r\nimport java.io.InputStream;\r\nimport java.io.InputStreamReader;\r\nimport java.net.HttpURLConnection;\r\nimport java.net.MalformedURLException;\r\nimport java.net.URL;\r\nimport java.util.ArrayList;\r\nimport java.util.Iterator;\r\n\r\npublic class AsyncItineraryCompute extends AsyncTask<String, Integer, JSONArray> {\r\n\r\n    private AppCompatActivity myActivity;\r\n\r\n    //Constructor\r\n    public AsyncItineraryCompute (AppCompatActivity LoadingPageActivity) {\r\n        myActivity = LoadingPageActivity;\r\n    }\r\n\r\n\r\n    @Override\r\n    protected void onPreExecute() {\r\n        //Prepare task and show waiting view\r\n        myActivity.setContentView(R.layout.activity_loading_page);\r\n        //progress.setProgressTintList(ColorStateList.valueOf(Color.GREEN));\r\n\r\n\r\n    }\r\n\r\n    @Override\r\n    protected JSONArray doInBackground(String... strings) {\r\n        publishProgress(1);\r\n        try { Thread.sleep(1000); } catch (InterruptedException e) { e.printStackTrace(); }\r\n\r\n        URL url;\r\n        HttpURLConnection urlConnection = null;\r\n        String result = null;\r\n        int error = 0;\r\n\r\n        try{\r\n            url = new URL(strings[0]);\r\n            urlConnection = (HttpURLConnection) url.openConnection(); // Open\r\n            InputStream in = new BufferedInputStream(urlConnection.getInputStream()); // Stream\r\n            publishProgress(2);\r\n            result = readStream(in);\r\n        }\r\n        catch (MalformedURLException e) {\r\n            e.printStackTrace();\r\n            error = 1;\r\n        }\r\n        catch (IOException e) {\r\n            e.printStackTrace();\r\n            error = 2;\r\n        }\r\n\r\n        finally {\r\n            if (urlConnection != null) {\r\n                urlConnection.disconnect();\r\n            }\r\n        }\r\n\r\n        publishProgress(4);\r\n\r\n\r\n\r\n        JSONArray json = new JSONArray();\r\n\r\n        try{\r\n            JSONObject message = new JSONObject();\r\n            switch (error){\r\n                case 0 :\r\n                    json = new JSONArray(result);\r\n                    message.put(\"message\",myActivity.getString(R.string.connexion_success));\r\n                    break;\r\n                case 1 :\r\n                    message.put(\"message\",myActivity.getString(R.string.error_url_format));\r\n                    break;\r\n                case 2 :\r\n                    message.put(\"message\", String.format(\"%s\\n%s\", myActivity.getString(R.string.connexion_failed), strings[0]));\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            json.put(json.length(),message);\r\n\r\n        }catch (JSONException e) {\r\n            e.printStackTrace();\r\n        }\r\n        return json;\r\n    }\r\n\r\n\r\n    @Override\r\n    protected void onProgressUpdate(Integer... values) {\r\n        ProgressBar pb = myActivity.findViewById(R.id.progress_bar);\r\n        pb.setProgress(values[0]);\r\n    }\r\n\r\n    @Override\r\n    protected void onPostExecute(final JSONArray c) {\r\n        if (c == null){\r\n            Toast.makeText(myActivity, R.string.error404, Toast.LENGTH_SHORT).show();\r\n        }else{\r\n            try {\r\n                Toast.makeText(myActivity, c.getJSONObject(c.length()-1).getString(\"message\"), Toast.LENGTH_LONG).show();\r\n            } catch (JSONException e) {\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n\r\n\r\n\r\n        //Reading JSON\r\n        final ArrayList<double[]> coord = new ArrayList<>();\r\n        try{\r\n            for (int i = 0; i<c.length()-1; i++)        //-1 to avoid the \"message\" element\r\n            {\r\n                JSONObject point = c.getJSONObject(i);\r\n                double longitude = point.getDouble(\"longitude\");\r\n                double latitude = point.getDouble(\"latitude\");\r\n                double[] p = {latitude,longitude};\r\n                coord.add(p);\r\n                Toast.makeText(myActivity, \"\"+p, Toast.LENGTH_LONG).show();\r\n\r\n            }\r\n        } catch (JSONException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        TextView text = myActivity.findViewById(R.id.text);\r\n        text.setText(R.string.itinerary_end_message); // Updates the textview\r\n        ProgressBar pb = myActivity.findViewById(R.id.progress_bar);\r\n        pb.setProgress(5);\r\n\r\n\r\n        int ITINERARY_END_SCREEN_TIMEOUT = 1000;\r\n\r\n        new Handler().postDelayed(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                //Send to the next Activity\r\n                Intent intent = new Intent(myActivity.getApplicationContext(), ItineraryActivity.class);\r\n                int i = 1;\r\n                for (double[] p:coord) {\r\n                    intent.putExtra(\"point\"+i,p);\r\n                    i++;\r\n                }\r\n                myActivity.startActivity(intent);\r\n                myActivity.finish();\r\n            }\r\n        }, ITINERARY_END_SCREEN_TIMEOUT);\r\n\r\n    }\r\n\r\n    private String readStream(InputStream is) throws IOException {\r\n        StringBuilder sb = new StringBuilder();\r\n        BufferedReader r = new BufferedReader(new InputStreamReader(is),1000);\r\n        for (String line = r.readLine(); line != null; line =r.readLine()){\r\n            sb.append(line);\r\n        }        is.close();\r\n        return sb.toString();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/helloworld/AsyncItineraryCompute.java	(revision 4ddf4dbab28faffda1144a0c978cc007be00b948)
+++ app/src/main/java/com/example/helloworld/AsyncItineraryCompute.java	(date 1609862360331)
@@ -118,11 +118,11 @@
         if (c == null){
             Toast.makeText(myActivity, R.string.error404, Toast.LENGTH_SHORT).show();
         }else{
-            try {
-                Toast.makeText(myActivity, c.getJSONObject(c.length()-1).getString("message"), Toast.LENGTH_LONG).show();
-            } catch (JSONException e) {
-                e.printStackTrace();
-            }
+//            try {
+//                Toast.makeText(myActivity, c.getJSONObject(c.length()-1).getString("message"), Toast.LENGTH_LONG).show();
+//            } catch (JSONException e) {
+//                e.printStackTrace();
+//            }
         }
 
 
